{"version":3,"sources":["images/avatars/0.jpg","images/shards-dashboards-logo.svg","images/avatars/1.jpg","images/avatars/2.jpg","images/avatars/3.jpg","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","layouts/Default.js","components/common/PageTitle.js","utils/chart.js","components/common/SmallStats.js","components/blog/UsersOverview.js","components/common/RangeDatePicker.js","components/blog/UsersByDevice.js","components/blog/NewDraft.js","components/blog/Discussions.js","components/common/TopReferrals.js","views/BlogOverview.js","components/user-profile-lite/UserDetails.js","components/user-profile-lite/UserAccountDetails.js","views/UserProfileLite.js","components/2020Graphs/MinSheetAccessed.js","components/2019Graphs/MinSheetAccessed.js","components/2020Graphs/BottomHalfPercent.js","components/2020Graphs/MeanStartVSProgressGrade.js","components/2020Graphs/MoreThan60.js","components/2020Graphs/ProgressVSStudentPercen.js","components/2020Graphs/Sheet4Q2.js","components/2020Graphs/Sheet5Q1.js","components/2020Graphs/Sheet6to8Q3.js","components/2019Graphs/TopHalfPercent.js","components/2019Graphs/SDHistogram.js","components/2019Graphs/ProgressVSStudentPercen.js","components/2019Graphs/PercentS1toS8vsProgress.js","components/2019Graphs/percentileHistogram.js","components/2019Graphs/AvgTimeToCompleteSheet.js","components/2019Graphs/MeanStartVSProgressGrade.js","components/2019Graphs/MoreThan60.js","components/2019Graphs/BottomHalfPercent.js","components/2019Graphs/Sheet6to8Q3.js","components/2019Graphs/Sheet2Q1.js","components/2019Graphs/Sheet5Q2.js","views/AddNewPost.js","views/Errors.js","components/2020Graphs/SDHistogram.js","views/ComponentsOverview.js","components/add-new-post/Editor.js","components/add-new-post/SidebarActions.js","components/add-new-post/SidebarCategories.js","views/Tables.js","components/2020Graphs/TopHalfPercent.js","components/2020Graphs/AvgTimeToCompleteSheet.js","views/BlogPosts.js","routes.js","withTracker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBarSearch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","window","location","hash","preventDefault","reload","_React$createElement","react_default","a","createElement","onSubmit","placeholder","style","height","defineProperty","width","type","React","Component","Notifications","visible","toggleNotifications","shards_react_es","className","onClick","pill","theme","open","UserActions","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","Link","to","divider","NavbarNav","navbar","Notifications_Notifications","UserActions_UserActions","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","htmlAfter","store","Store","registerToActions","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","href","MainNavbar","layout","stickyTop","classes","classNames","NavbarSearch","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","lineHeight","id","maxWidth","SidebarSearch","display","minHeight","seamless","aria-label","SidebarNavItem","item","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","getSidebarItems","onChange","addChangeListener","removeChangeListener","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","layout_MainFooter","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStats","canvasRef","createRef","chartOptions","maintainAspectRatio","responsive","legend","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","apply","toConsumableArray","chartData","data","chartConfig","labels","chartLabels","datasets","options","current","_this$props","variation","label","percentage","increase","cardClasses","concat","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","ref","shortid","create","Scores","ColumnTitle","console","log","replace","d3","then","students","i","keys","push","j","values","UsersOverview","myChart","backgroundColor","borderColor","borderWidth","maxRotation","minRotation","beginAtZero","text","fontSize","labelString","position","fontColor","padding","left","UsersByDevice","boxWidth","cutoutPercentage","mode","hoverBorderColor","NewDraft","Discussions","discussions","discussion","author","image","name","url","post","date","body","TopReferrals","referralData","flush","BlogOverview","smallStats","noGutters","common_PageTitle","stats","common_SmallStats","decrease","blog_UsersOverview","blog_UsersByDevice","blog_NewDraft","blog_Discussions","common_TopReferrals","fill","UserDetails","userDetails","avatar","jobTitle","outline","performanceReportTitle","performanceReportValue","metaTitle","metaValue","UserAccountDetails","form","htmlFor","autoComplete","rows","UserProfileLite","user_profile_lite_UserDetails","user_profile_lite_UserAccountDetails","Sheet","dictAvg","dict","Min0","Min1","Min2","Min3","Min4","Min5","Min6","Min7","Min8","Min9","Min10","Min11","Min12","Min13","Min14","Min15","Min16","Min17","Min18","count","cumulativeSum","sum","reverse","d","round","shift","MinSheetAccessed","_options","dictAvgPlot","MinSheetAccessed2k19","plugins","chartTrendline","dataNeed","progressScores","dictSheet","Sheet5","Sheet4","Sheet3","Sheet2","Sheet1","Sheet8","Sheet7","Sheet6","Sheet12","Sheet11","Sheet10","Sheet9","Sheet17","Sheet16","Sheet15","Sheet14","Sheet13","LectureDate","dictPercentile","P5","P4","P3","P2","P1","P8","P7","P6","P12","P11","P10","P9","P17","P16","P15","P14","P13","PercentAvgSheet1to8","DaysAfterLectMeanSheet1to8","Sheet1to8SD","Percentile1to8SD","LectureCount","progressKey","progressScoremaybe","parseFloat","Date","DayNumber","dayOfYear","abs","key2","z","dictSheetArray","dictPercentileArray","dictSheetTranspose","_","colIndex","row","dictPercentileTranspose","calcAverage","getSD","bottom50Percent","bottom50marks","y","isLeapYear","year","getFullYear","getDOY","mn","getMonth","dn","getDate","floor","arr","slice","reduce","b","sumArr","m","sqrt","sq","n","pow","Bottom","trendlineLinear","lineStyle","MeanStart","top40Percent","top40marks","MoreThan","ProgressVSStud","filter","studentPercent","top50Percent","top50marks","Sheet6to8","ExamResults","Sheet18","P18","PercentAvgSheet1to9","DaysAfterLectMeanSheet1to9","Sheet1to9SD","Percentile1to9SD","ExamKey","ExamScoremaybe","Top2k19","binCount2","bins","binCount","SDHist2k19","ProgressVSStud2k19","PercenS1to82k19","PercentHis2k19","AvgTimeToComplete2019","_Chart","MeanStart2k19","MoreThan2k19","Bottom2k19","Sheet6to82k19","Sheet2k19","Sheet52k19","global","defaultFontFamily","AddNewPost","BrowserRouter","_2020Graphs_MinSheetAccessed","_2019Graphs_MinSheetAccessed","_2019Graphs_ProgressVSStudentPercen","ProgressVSStudentPercen","_2019Graphs_MeanStartVSProgressGrade","MeanStartVSProgressGrade","Sheet6to8Q3","_2019Graphs_Sheet6to8Q3","Sheet4Q2","Sheet2Q1","Sheet5Q2","Sheet5Q1","Errors","SDHist","ComponentsOverview","_2020Graphs_SDHistogram","SDHistogram","PercentS1toS8vsProgress","percentileHistogram","Editor","lib_default","SidebarActions","SidebarCategories","defaultChecked","Tables","add_new_post_Editor","add_new_post_SidebarActions","add_new_post_SidebarCategories","Top","AvgTimeToComplete2020","routes","path","exact","component","Redirect","BlogPosts","BottomHalfPercent","_2019Graphs_BottomHalfPercent","MoreThan60","_2019Graphs_MoreThan60","_2020Graphs_TopHalfPercent","TopHalfPercent","_2020Graphs_AvgTimeToCompleteSheet","AvgTimeToCompleteSheet","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","arguments","undefined","trackPage","page","set","pageview","BASENAME","_Component","HOC","inherits","createClass","pathname","search","prevProps","currentPage","nextPage","StudentIdContext","createContext","src_App","Provider","basename","route","index","Route","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7daf14f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.64db2776.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.60a85991.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.56606f8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.e26f6eb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.1b203a83.jpg\";","import React from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput\n} from \"shards-react\";\n\nclass NavBarSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    // alert('A name was submitted: ' + this.state.value);\n    //window.history.pushState(this.state.value,this.state.value,)\n    window.location.hash=this.state.value;\n    event.preventDefault();\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <input  placeholder=\"Search Student ID\" style={{height: \"100px\"}} style={{width: \"1000px\"}} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input style={{height: \"27px\"}} type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n}\n\nexport default NavBarSearch\n","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\n\nexport default class Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n  }\n\n  toggleNotifications() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem className=\"border-right dropdown notifications\">\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">&#xE7F4;</i>\n            <Badge pill theme=\"danger\">\n              2\n            </Badge>\n          </div>\n        </NavLink>\n        <Collapse\n          open={this.state.visible}\n          className=\"dropdown-menu dropdown-menu-small\"\n        >\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE6E1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">New Post</span>\n              <p>\n                Dave has just posted a question\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE8D1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Lecturer Comment</span>\n              <p>\n              I had a lot of questions about tutorial sheet 3. This will be addressed in Lecture\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem className=\"notification__all text-center\">\n            View all Notifications\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\n\nexport default class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={require(\"./../../../../images/avatars/0.jpg\")}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">Dr Peter Johnson</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link} to=\"user-profile\">\n            <i className=\"material-icons\">&#xE7FD;</i> Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Tutor Group\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    <UserActions />\n  </Nav>\n);\n","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Overview\",\n      to: \"/Overview\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Personal/Academic Tutor\",\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: \"/Tutor\",\n    },\n    {\n      title: \"Lecturer Portal\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/LecturerPortal\",\n    },\n    {\n      title: \"Student Portal\",\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\n      to: \"/StudentPortal\",\n    },\n    {\n      title: \"Modules\",\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n      to: \"/Modules\",\n    },\n    {\n      title: \"User Profile\",\n      htmlBefore: '<i class=\"material-icons\">person</i>',\n      to: \"/user-profile-lite\",\n    },\n    {\n      title: \"Errors\",\n      htmlBefore: '<i class=\"material-icons\">error</i>',\n      to: \"/errors\",\n    }\n  ];\n}\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSearch />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"../../../images/shards-dashboards-logo.svg\")}\n                alt=\"Shards Dashboard\"\n              />\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  Imperial Dashboard\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for a Student ID\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink tag={Link} to={item.to}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.array,\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © 2021 MechanicalEngineeringDepartment\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"#\"\n    },\n    {\n      title: \"Services\",\n      to: \"#\"\n    },\n    {\n      title: \"About\",\n      to: \"#\"\n    },\n    {\n      title: \"Products\",\n      to: \"#\"\n    },\n    {\n      title: \"Blog\",\n      to: \"#\"\n    }\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/layout/MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { variation, label, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>{percentage}</span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\nimport * as d3 from \"d3\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../utils/chart\";\nimport NavbarSearch from '../layout/MainNavbar/NavbarSearch';\n\n// function getUserName() {\n//   var nameField = document.getElementById('nameField').value;\n//   var result = document.getElementById('result');\n\n//   let myChart = document.getElementById('myChart').getContext('2d');\nvar Scores = [];\nvar ColumnTitle = [];\nconsole.log(window.location.hash && window.location.hash.length > 5 ? window.location.hash.replace('#','') : '59194883')\n  d3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/Y1_all_20210409_anonymous.csv\") // request csv file\n  .then(makeChart); // converts into an array then call makeChart() function\n\n  // calls function to make a chart after it has been converted into an array\n  function makeChart(students) { \n          for (var i=14; i<Object.keys(students[0]).length - 11; i++){\n              ColumnTitle.push(Object.keys(students[0])[i])\n          }\n          \n          // for loop to check and calculate the days after lecture when students started tutorial sheet\n          for (var i =0; i < students.length; i++){\n              if (students[i][\"Student ID\"] === (window.location.hash && window.location.hash.length > 5 ? window.location.hash.replace('#','') : '59194883')){\n                  for (var j=14; j<Object.values(students[i]).length - 11; j++){\n                      Scores.push(Object.values(students[i])[j])\n                  }\n              } \n          };\n      }\n\nclass UsersOverview extends React.Component {\n  //static contextType = StudentIdContext;\nconstructor(props) {\nsuper(props);\nthis.canvasRef = React.createRef();\n}\n\ncomponentDidMount() {\nthis.myChart = new Chart(this.canvasRef.current, {\ntype: 'bar',\ndata: {\n  labels: ColumnTitle,\n  datasets: [{\n  label: 'Average Progress Mark',\n  data: Scores,\n  backgroundColor: [\n      '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\n\n  ],\n  borderColor: [\n      '#0000cc',\n  ],\n  borderWidth: 1\n  }]\n},\noptions: {\n  responsive: false,\n  scales: {\n  xAxes: [{\n      ticks: {\n      maxRotation: 90,\n      minRotation: 80\n      }\n  }],\n  yAxes: [{\n      ticks: {\n      beginAtZero: true\n      }\n  }]\n  }\n},\noptions: {\n  title: {\n      display: true,\n      text: 'Search Student ID to get overall data',\n      fontSize: 25\n  },\n  scales: {\n      xAxes: [{\n          display: true,\n          scaleLabel: {\n              display: true,\n              labelString: 'Mech Eng Exams'\n          }\n      }],\n      yAxes: [{\n          display: true,\n          scaleLabel: {\n              display: true,\n              labelString: 'Marks(%)'\n          }\n      }]\n  },\n  maintainAspectRatio: false,\n  legend: {\n      position: 'right',\n      display: false,\n      labels: {\n          fontColor: '#000'\n      }\n  },\n  layout: {\n      padding: {\n          left: 50,\n          right: 50,\n          bottom: 0,\n          top:0\n      }\n  },\n}\n\n});\n}\n\nrender() {\nreturn <canvas ref={this.canvasRef} />;\n}\n}\n\n\nexport default UsersOverview;","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  InputGroup,\n  DatePicker,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nimport \"../../assets/range-date-picker.css\";\n\nclass RangeDatePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startDate: undefined,\n      endDate: undefined\n    };\n\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n  }\n\n  handleStartDateChange(value) {\n    this.setState({\n      ...this.state,\n      ...{ startDate: new Date(value) }\n    });\n  }\n\n  handleEndDateChange(value) {\n    this.setState({\n      ...this.state,\n      ...{ endDate: new Date(value) }\n    });\n  }\n\n  render() {\n    const { className } = this.props;\n    const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\n\n    return (\n      <InputGroup className={classes}>\n        <DatePicker\n          size=\"sm\"\n          selected={this.state.startDate}\n          onChange={this.handleStartDateChange}\n          placeholderText=\"Start Date\"\n          dropdownMode=\"select\"\n          className=\"text-center\"\n        />\n        <DatePicker\n          size=\"sm\"\n          selected={this.state.endDate}\n          onChange={this.handleEndDateChange}\n          placeholderText=\"End Date\"\n          dropdownMode=\"select\"\n          className=\"text-center\"\n        />\n        <InputGroupAddon type=\"append\">\n          <InputGroupText>\n            <i className=\"material-icons\">&#xE916;</i>\n          </InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n}\n\nexport default RangeDatePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Row,\n  Col,\n  FormSelect,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass UsersByDevice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartConfig = {\n      type: \"pie\",\n      data: this.props.chartData,\n      options: {\n        ...{\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 20\n            }\n          },\n          cutoutPercentage: 0,\n          tooltips: {\n            custom: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        },\n        ...this.props.chartOptions\n      }\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"d-flex py-0\">\n          <canvas\n            height=\"220\"\n            ref={this.canvasRef}\n            className=\"blog-users-by-device m-auto\"\n          />\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"last-week\"\n                style={{ maxWidth: \"130px\" }}\n                onChange={() => {}}\n              >\n                <option value=\"last-week\">Last Week</option>\n                <option value=\"today\">Today</option>\n                <option value=\"last-month\">Last Month</option>\n                <option value=\"last-year\">Last Year</option>\n              </FormSelect>\n            </Col>\n            <Col className=\"text-right view-report\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\">View full report &rarr;</a>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nUsersByDevice.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart config object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object\n};\n\nUsersByDevice.defaultProps = {\n  title: \"Users by device\",\n  chartData: {\n    datasets: [\n      {\n        hoverBorderColor: \"#ffffff\",\n        data: [68.3, 24.2, 7.5],\n        backgroundColor: [\n          \"rgba(0,123,255,0.9)\",\n          \"rgba(0,123,255,0.5)\",\n          \"rgba(0,123,255,0.3)\"\n        ]\n      }\n    ],\n    labels: [\"Desktop\", \"Tablet\", \"Mobile\"]\n  }\n};\n\nexport default UsersByDevice;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormInput,\n  FormTextarea,\n  Button\n} from \"shards-react\";\n\nconst NewDraft = ({ title }) => (\n  <Card small className=\"h-100\">\n    {/* Card Header */}\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"d-flex flex-column\">\n      <Form className=\"quick-post-form\">\n        {/* Title */}\n        <FormGroup>\n          <FormInput placeholder=\"Fluid Mechanics Sheet 5 Q1\" />\n        </FormGroup>\n\n        {/* Body */}\n        <FormGroup>\n          <FormTextarea placeholder=\"I am very confused how to calculate....\" />\n        </FormGroup>\n\n        {/* Create Draft */}\n        <FormGroup className=\"mb-0\">\n          <Button theme=\"accent\" type=\"submit\">\n             Post Comment\n          </Button>\n        </FormGroup>\n      </Form>\n    </CardBody>\n  </Card>\n);\n\nNewDraft.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string\n};\n\nNewDraft.defaultProps = {\n  title: \"New Comment\"\n};\n\nexport default NewDraft;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  ButtonGroup,\n  Button,\n  Row,\n  Col\n} from \"shards-react\";\n\nconst Discussions = ({ title, discussions }) => (\n  <Card small className=\"blog-comments\">\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      {discussions.map((discussion, idx) => (\n        <div key={idx} className=\"blog-comments__item d-flex p-3\">\n          {/* Avatar */}\n          <div className=\"blog-comments__avatar mr-3\">\n            <img src={discussion.author.image} alt={discussion.author.name} />\n          </div>\n\n          {/* Content */}\n          <div className=\"blog-comments__content\">\n            {/* Content :: Title */}\n            <div className=\"blog-comments__meta text-mutes\">\n              <a className=\"text-secondary\" href={discussion.author.url}>\n                {discussion.author.name}\n              </a>{\" \"}\n              on{\" \"}\n              <a className=\"text-secondary\" href={discussion.post.url}>\n                {discussion.post.title}\n              </a>\n              <span className=\"text-mutes\">- {discussion.date}</span>\n            </div>\n\n            {/* Content :: Body */}\n            <p className=\"m-0 my-1 mb-2 text-muted\">{discussion.body}</p>\n\n            {/* Content :: Actions */}\n            <div className=\"blog-comments__actions\">\n              <ButtonGroup size=\"sm\">\n                <Button theme=\"white\">\n                  <span className=\"text-success\">\n                    <i className=\"material-icons\">check</i>\n                  </span>{\" \"}\n                  Approve\n                </Button>\n                <Button theme=\"white\">\n                  <span className=\"text-danger\">\n                    <i className=\"material-icons\">clear</i>\n                  </span>{\" \"}\n                  Reject\n                </Button>\n                <Button theme=\"white\">\n                  <span className=\"text-light\">\n                    <i className=\"material-icons\">more_vert</i>\n                  </span>{\" \"}\n                  Edit\n                </Button>\n              </ButtonGroup>\n            </div>\n          </div>\n        </div>\n      ))}\n    </CardBody>\n\n    <CardFooter className=\"border-top\">\n      <Row>\n        <Col className=\"text-center view-report\">\n          <Button theme=\"white\" type=\"submit\">\n            View All Comments\n          </Button>\n        </Col>\n      </Row>\n    </CardFooter>\n  </Card>\n);\n\nDiscussions.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The discussions dataset.\n   */\n  discussions: PropTypes.array\n};\n\nDiscussions.defaultProps = {\n  title: \"Comments\",\n  discussions: [\n    {\n      id: 1,\n      date: \"Yesterday\",\n      author: {\n        image: require(\"../../images/avatars/1.jpg\"),\n        name: \"Marian\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Fluid Mechanics\",\n        url: \"#\"\n      },\n      body: \"I am very unsure on how to work out Viscosity ...\"\n    },\n    {\n      id: 2,\n      date: \"2 days ago\",\n      author: {\n        image: require(\"../../images/avatars/2.jpg\"),\n        name: \"John\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Fluid Mechanics\",\n        url: \"#\"\n      },\n      body: \"How do we work out non-dimensionality? Anyone know?\"\n    },\n    {\n      id: 3,\n      date: \"3 days ago\",\n      author: {\n        image: require(\"../../images/avatars/3.jpg\"),\n        name: \"Jessica\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Mathematics\",\n        url: \"#\"\n      },\n      body: \"Dumb question but how do we multiply matrices together lol?\"\n    }\n  ]\n};\n\nexport default Discussions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  CardFooter,\n  Row,\n  Col,\n  FormSelect\n} from \"shards-react\";\n\nconst TopReferrals = ({ title, referralData }) => (\n  <Card small>\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n      <div className=\"block-handle\" />\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      <ListGroup small flush className=\"list-group-small\">\n        {referralData.map((item, idx) => (\n          <ListGroupItem key={idx} className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">{item.title}</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              {item.value}\n            </span>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </CardBody>\n\n    <CardFooter className=\"border-top\">\n      <Row>\n        {/* Time Span */}\n        <Col>\n          <FormSelect\n            size=\"sm\"\n            value=\"last-week\"\n            style={{ maxWidth: \"130px\" }}\n            onChange={() => {}}\n          >\n            <option value=\"last-week\">Last Week</option>\n            <option value=\"today\">Today</option>\n            <option value=\"last-month\">Last Month</option>\n            <option value=\"last-year\">Last Year</option>\n          </FormSelect>\n        </Col>\n\n        {/* View Full Report */}\n        <Col className=\"text-right view-report\">\n          {/* eslint-disable-next-line */}\n          <a href=\"#\">Full report &rarr;</a>\n        </Col>\n      </Row>\n    </CardFooter>\n  </Card>\n);\n\nTopReferrals.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The referral data.\n   */\n  referralData: PropTypes.array\n};\n\nTopReferrals.defaultProps = {\n  title: \"Top Referrals\",\n  referralData: [\n    {\n      title: \"GitHub\",\n      value: \"19,291\"\n    },\n    {\n      title: \"Stack Overflow\",\n      value: \"11,201\"\n    },\n    {\n      title: \"Hacker News\",\n      value: \"9,291\"\n    },\n    {\n      title: \"Reddit\",\n      value: \"8,281\"\n    },\n    {\n      title: \"The Next Web\",\n      value: \"7,128\"\n    },\n    {\n      title: \"Tech Crunch\",\n      value: \"6,218\"\n    },\n    {\n      title: \"YouTube\",\n      value: \"1,218\"\n    },\n    {\n      title: \"Adobe\",\n      value: \"1,171\"\n    }\n  ]\n};\n\nexport default TopReferrals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport PageTitle from \"./../components/common/PageTitle\";\nimport SmallStats from \"./../components/common/SmallStats\";\nimport UsersOverview from \"./../components/blog/UsersOverview\";\nimport UsersByDevice from \"./../components/blog/UsersByDevice\";\nimport NewDraft from \"./../components/blog/NewDraft\";\nimport Discussions from \"./../components/blog/Discussions\";\nimport TopReferrals from \"./../components/common/TopReferrals\";\n\nconst BlogOverview = ({ smallStats }) => (\n  <Container fluid className=\"main-content-container px-4\">\n    {/* Page Header */}\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle title=\"Select Your Role\" subtitle=\"Mechanical Engineering Learning Dashboard\" className=\"text-sm-left mb-3\" />\n    </Row>\n\n    {/* Small Stats Blocks */}\n    <Row>\n      {smallStats.map((stats, idx) => (\n        <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n          <SmallStats\n            id={`small-stats-${idx}`}\n            variation=\"1\"\n            chartData={stats.datasets}\n            chartLabels={stats.chartLabels}\n            label={stats.label}\n            value={stats.value}\n            percentage={stats.percentage}\n            increase={stats.increase}\n            decrease={stats.decrease}\n          />\n        </Col>\n      ))}\n    </Row>\n\n    <Row>\n      {/* Users Overview */}\n      <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <UsersOverview />\n      </Col>\n\n      {/* Users by Device */}\n      <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n        <UsersByDevice />\n      </Col>\n\n      {/* New Draft */}\n      <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n        <NewDraft />\n      </Col>\n\n      {/* Discussions */}\n      <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <Discussions />\n      </Col>\n\n      {/* Top Referrals */}\n      <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <TopReferrals />\n      </Col>\n    </Row>\n  </Container>\n);\n\nBlogOverview.propTypes = {\n  /**\n   * The small stats dataset.\n   */\n  smallStats: PropTypes.array\n};\n\nBlogOverview.defaultProps = {\n  smallStats: [\n    {\n      label: \"Unanswered Piazza Posts\",\n      value: \"52\",\n      percentage: \"9.7%\",\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n          borderColor: \"rgb(0, 184, 216)\",\n          data: [1, 2, 1, 3, 5, 4, 7]\n        }\n      ]\n    },\n    {\n      label: \"Pages\",\n      value: \"182\",\n      percentage: \"12.4\",\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(23,198,113,0.1)\",\n          borderColor: \"rgb(23,198,113)\",\n          data: [1, 2, 3, 3, 3, 4, 4]\n        }\n      ]\n    },\n    {\n      label: \"Student Teams Comments\",\n      value: \"147\",\n      percentage: \"5.9%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: [2, 3, 3, 3, 4, 3, 3]\n        }\n      ]\n    },\n    {\n      label: \"New Users\",\n      value: \"29\",\n      percentage: \"7.9%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,65,105,0.1)\",\n          borderColor: \"rgb(255,65,105)\",\n          data: [1, 7, 1, 3, 1, 4, 8]\n        }\n      ]\n    },\n    {\n      label: \"Active Users\",\n      value: \"281\",\n      percentage: \"2.4%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgb(0,123,255,0.1)\",\n          borderColor: \"rgb(0,123,255)\",\n          data: [3, 2, 3, 2, 4, 5, 4]\n        }\n      ]\n    }\n  ]\n};\n\nexport default BlogOverview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  Progress\n} from \"shards-react\";\n\nconst UserDetails = ({ userDetails }) => (\n  <Card small className=\"mb-4 pt-3\">\n    <CardHeader className=\"border-bottom text-center\">\n      <div className=\"mb-3 mx-auto\">\n        <img\n          className=\"rounded-circle\"\n          src={userDetails.avatar}\n          alt={userDetails.name}\n          width=\"110\"\n        />\n      </div>\n      <h4 className=\"mb-0\">{userDetails.name}</h4>\n      <span className=\"text-muted d-block mb-2\">{userDetails.jobTitle}</span>\n      <Button pill outline size=\"sm\" className=\"mb-2\">\n        <i className=\"material-icons mr-1\">person_add</i> Follow\n      </Button>\n    </CardHeader>\n    <ListGroup flush>\n      <ListGroupItem className=\"px-4\">\n        <div className=\"progress-wrapper\">\n          <strong className=\"text-muted d-block mb-2\">\n            {userDetails.performanceReportTitle}\n          </strong>\n          <Progress\n            className=\"progress-sm\"\n            value={userDetails.performanceReportValue}\n          >\n            <span className=\"progress-value\">\n              {userDetails.performanceReportValue}%\n            </span>\n          </Progress>\n        </div>\n      </ListGroupItem>\n      <ListGroupItem className=\"p-4\">\n        <strong className=\"text-muted d-block mb-2\">\n          {userDetails.metaTitle}\n        </strong>\n        <span>{userDetails.metaValue}</span>\n      </ListGroupItem>\n    </ListGroup>\n  </Card>\n);\n\nUserDetails.propTypes = {\n  /**\n   * The user details object.\n   */\n  userDetails: PropTypes.object\n};\n\nUserDetails.defaultProps = {\n  userDetails: {\n    name: \"Dr Peter Johnson\",\n    avatar: require(\"./../../images/avatars/0.jpg\"),\n    jobTitle: \"Fluid Mechanic Lecturer\",\n    performanceReportTitle: \"Workload\",\n    performanceReportValue: 74,\n    metaTitle: \"Description\",\n    metaValue:\n    \"Curabitur interdum, leo vel facilisis placerat, dolor libero iaculis velit, eget venenatis tellus velit sit amet augue. Nam sodales interdum odio, a pulvinar ipsum pharetra ac.\"\n  }\n};\n\nexport default UserDetails;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormInput,\n  FormSelect,\n  FormTextarea,\n  Button\n} from \"shards-react\";\n\nconst UserAccountDetails = ({ title }) => (\n  <Card small className=\"mb-4\">\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n    <ListGroup flush>\n      <ListGroupItem className=\"p-3\">\n        <Row>\n          <Col>\n            <Form>\n              <Row form>\n                {/* First Name */}\n                <Col md=\"6\" className=\"form-group\">\n                  <label htmlFor=\"feFirstName\">First Name</label>\n                  <FormInput\n                    id=\"feFirstName\"\n                    placeholder=\"First Name\"\n                    value=\"Dr Peter\"\n                    onChange={() => {}}\n                  />\n                </Col>\n                {/* Last Name */}\n                <Col md=\"6\" className=\"form-group\">\n                  <label htmlFor=\"feLastName\">Last Name</label>\n                  <FormInput\n                    id=\"feLastName\"\n                    placeholder=\"Last Name\"\n                    value=\"Johnson\"\n                    onChange={() => {}}\n                  />\n                </Col>\n              </Row>\n              <Row form>\n                {/* Email */}\n                <Col md=\"6\" className=\"form-group\">\n                  <label htmlFor=\"feEmail\">Email</label>\n                  <FormInput\n                    type=\"email\"\n                    id=\"feEmail\"\n                    placeholder=\"Email Address\"\n                    value=\"PJ@Imperial.ac.uk\"\n                    onChange={() => {}}\n                    autoComplete=\"email\"\n                  />\n                </Col>\n                {/* Password */}\n                <Col md=\"6\" className=\"form-group\">\n                  <label htmlFor=\"fePassword\">Password</label>\n                  <FormInput\n                    type=\"password\"\n                    id=\"fePassword\"\n                    placeholder=\"Password\"\n                    value=\"EX@MPL#P@$$w0RD\"\n                    onChange={() => {}}\n                    autoComplete=\"current-password\"\n                  />\n                </Col>\n              </Row>\n              <FormGroup>\n                <label htmlFor=\"feAddress\">Address</label>\n                <FormInput\n                  id=\"feAddress\"\n                  placeholder=\"Address\"\n                  value=\"Exhibition Rd, South Kensington\"\n                  onChange={() => {}}\n                />\n              </FormGroup>\n              <Row form>\n                {/* City */}\n                <Col md=\"6\" className=\"form-group\">\n                  <label htmlFor=\"feCity\">City</label>\n                  <FormInput\n                    id=\"feCity\"\n                    placeholder=\"London\"\n                    onChange={() => {}}\n                  />\n                </Col>\n                {/* State */}\n                <Col md=\"4\" className=\"form-group\">\n                  <label htmlFor=\"feInputState\">Region</label>\n                  <FormSelect id=\"feInputState\">\n                    <option>Choose...</option>\n                    <option>...</option>\n                  </FormSelect>\n                </Col>\n                {/* Zip Code */}\n                <Col md=\"2\" className=\"form-group\">\n                  <label htmlFor=\"feZipCode\">Zip</label>\n                  <FormInput\n                    id=\"feZipCode\"\n                    placeholder=\"SW7 2BX\"\n                    onChange={() => {}}\n                  />\n                </Col>\n              </Row>\n              <Row form>\n                {/* Description */}\n                <Col md=\"12\" className=\"form-group\">\n                  <label htmlFor=\"feDescription\">Description</label>\n                  <FormTextarea id=\"feDescription\" rows=\"5\" />\n                </Col>\n              </Row>\n              <Button theme=\"accent\">Update Account</Button>\n            </Form>\n          </Col>\n        </Row>\n      </ListGroupItem>\n    </ListGroup>\n  </Card>\n);\n\nUserAccountDetails.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string\n};\n\nUserAccountDetails.defaultProps = {\n  title: \"Account Details\"\n};\n\nexport default UserAccountDetails;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport PageTitle from \"../components/common/PageTitle\";\nimport UserDetails from \"../components/user-profile-lite/UserDetails\";\nimport UserAccountDetails from \"../components/user-profile-lite/UserAccountDetails\";\n\nconst UserProfileLite = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle title=\"User Profile\" subtitle=\"Mechanical Engineering\" md=\"12\" className=\"ml-sm-auto mr-sm-auto\" />\n    </Row>\n    <Row>\n      <Col lg=\"4\">\n        <UserDetails />\n      </Col>\n      <Col lg=\"8\">\n        <UserAccountDetails />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default UserProfileLite;\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar Sheet = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"]\r\nvar dictAvg = [100, 99, 98, 96, 94, 92, 90, 88, 86, 73, 67, 59, 50, 43, 28, 13, 0, 0, 0];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/gb_FMX2_2020_Sets1_15_20210309_anon.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary\r\n    var dict = {Min0:0 , Min1:0 , Min2:0 ,Min3:0, Min4:0, Min5:0, Min6:0, Min7:0, Min8:0, Min9:0, Min10:0, Min11:0, Min12:0, Min13:0, Min14:0, Min15:0, Min16:0, Min17:0, Min18:0 };\r\n\r\n    for (var i =0; i < students.length; i++){\r\n        var count = 0;\r\n        for (var j =10; j <= 96; j += 5){\r\n            var key = Object.keys(students[i])[j];\r\n            var value = students[i][key]\r\n            if (value > 0){\r\n                count ++;\r\n            }\r\n        }\r\n        key = Object.keys(dict)[count];\r\n        dict[key]++\r\n    };\r\n    // works out the cumulative sum of students\r\n    const cumulativeSum = (sum => value => sum += value)(0);\r\n    var dict2 = Object.values(dict).reverse().map(cumulativeSum).reverse();\r\n\r\n    var dictAvg = dict2.map(function(d) {\r\n        return Math.round((d / students.length) * 100)\r\n    })\r\n    console.log(dictAvg)\r\n    dictAvg.shift(); // removes the first index\r\n\r\n}\r\n\r\nclass MinSheetAccessed extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10,\r\n                maintainAspectRatio: false\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {\r\n            labels: Sheet, //sets y axis to student names \r\n            datasets: [{ //input data\r\n                label: 'Tutorial Sheet',\r\n                data: dictAvg, //converts total score to a percentage\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#777',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00'\r\n            }]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Proportion of sheets accessed by Students 2020',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Month'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Value'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Proportion of students(%)',\r\n                        fontSize: 20\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Minimum no. of sheets accessed',\r\n                        fontSize: 20\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }],\r\n            },\r\n            maintainAspectRatio: false\r\n        }\r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default MinSheetAccessed;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar Sheet = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"]\r\nvar dictAvgPlot = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/Fluids_Mobius_gradebook_sheets_1-18.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary\r\n    var dict = {Min0:0 , Min1:0 , Min2:0 ,Min3:0, Min4:0, Min5:0, Min6:0, Min7:0, Min8:0, Min9:0, Min10:0, Min11:0, Min12:0, Min13:0, Min14:0, Min15:0, Min16:0, Min17:0, Min18:0 };\r\n\r\n    for (var i =0; i < students.length; i++){\r\n        var count = 0;\r\n        for (var j =11; j <= 96; j += 5){\r\n            var key = Object.keys(students[i])[j];\r\n            var value = students[i][key]\r\n            if (value > 0){\r\n                count ++;\r\n            }\r\n        }\r\n        key = Object.keys(dict)[count];\r\n        dict[key]++\r\n    };\r\n    // works out the cumulative sum of students\r\n    const cumulativeSum = (sum => value => sum += value)(0);\r\n    var dict2 = Object.values(dict).reverse().map(cumulativeSum).reverse();\r\n\r\n    var dictAvg = dict2.map(function(d) {\r\n        return Math.round((d / students.length) * 100)\r\n    })\r\n    console.log(dictAvg)\r\n    dictAvg.shift(); // removes the first index\r\n\r\n    for(var i=0; i < dictAvg.length; i++){\r\n        dictAvgPlot.push(dictAvg[i])\r\n    }\r\n}\r\n\r\nclass MinSheetAccessed2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10,\r\n                maintainAspectRatio: false\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {\r\n            labels: Sheet, //sets y axis to student names \r\n            datasets: [{ //input data\r\n                label: 'Tutorial Sheet',\r\n                data: dictAvgPlot, //converts total score to a percentage\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#777',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00'\r\n            }]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Proportion of sheets accessed by Students 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Month'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Value'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Proportion of students(%)',\r\n                        fontSize: 20\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Minimum no. of sheets accessed',\r\n                        fontSize: 20\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }],\r\n            },\r\n            maintainAspectRatio: false\r\n        }\r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default MinSheetAccessed2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed =[];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n    var progressScores = [];\r\n    var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n    var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n    var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[97];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n        for (var j =8; j <= 90; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 154\r\n            }\r\n            else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                DayNumber -= 286;\r\n            } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                DayNumber += 52;\r\n            } else {\r\n                DayNumber += 45\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 8; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n\r\n    // filter out top 50%\r\n    // progressScores\r\n    var bottom50Percent = [];\r\n    var bottom50marks = [];\r\n    for(var i=0; i < PercentAvgSheet1to8.length; i++){\r\n        if(PercentAvgSheet1to8[i] < 50){\r\n            bottom50Percent.push(PercentAvgSheet1to8[i])\r\n            bottom50marks.push(progressScores[i])\r\n        }\r\n    }\r\n\r\n    //need to convert into single array of objects\r\n\r\n    const data = bottom50marks.map((x, i) => {\r\n        return {\r\n            x: x,\r\n            y: bottom50Percent[i]\r\n        };\r\n    });\r\n\r\n    for(var i=0; i < data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n//function to work out week of the year\r\nvar weekOfYear = function(date){\r\nvar d = new Date(+date);\r\nd.setHours(0,0,0);\r\nd.setDate(d.getDate()+4-(d.getDay()||7));\r\nreturn Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n};\r\n\r\n//function to work out the current day of the year\r\nDate.prototype.isLeapYear = function() {\r\nvar year = this.getFullYear();\r\nif((year & 3) != 0) return false;\r\nreturn ((year % 100) != 0 || (year % 400) == 0);\r\n};\r\n\r\n// Get Day of Year\r\nDate.prototype.getDOY = function() {\r\nvar dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nvar mn = this.getMonth();\r\nvar dn = this.getDate();\r\nvar dayOfYear = dayCount[mn] + dn;\r\nif(mn > 1 && this.isLeapYear()) dayOfYear++;\r\nreturn dayOfYear;\r\n};\r\n\r\nconst dayOfYear = date =>\r\nMath.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\nfunction sortNumber(a,b) {\r\nreturn a - b;\r\n}\r\n\r\nfunction quantile(array, percentile) {\r\n    array.sort(sortNumber);\r\n    var index = percentile/100. * (array.length-1);\r\n    if (Math.floor(index) == index) {\r\n        var result = array[index];\r\n    } else {\r\n        var i = Math.floor(index)\r\n        var fraction = index - i;\r\n        result = array[i] + (array[i+1] - array[i]) * fraction;\r\n    }\r\n    return result;\r\n}\r\n\r\n// calculate sum\r\nfunction sumArr(arr){\r\n    var a = arr.slice();\r\n    return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n}\r\n\r\n//calculate average\r\nfunction calcAverage(arr){\r\n    var a = arr.slice();\r\n    if (a.length){\r\n        var sum = sumArr(a);\r\n        var avg = sum / a.length;\r\n        return avg;\r\n    }    \r\n    return false;\r\n}\r\n\r\n// Standard deviation\r\nfunction getSD(data) {\r\n    let m = calcAverage(data);\r\n    return Math.sqrt(data.reduce(function (sq, n) {\r\n            return sq + Math.pow(n - m, 2);\r\n        }, 0) / (data.length - 1));\r\n};\r\n\r\nclass Bottom extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10,\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {    \r\n            datasets: [{ //input data\r\n                label: 'Bottom 50% Percentile Standard Deviation of Tutorial Sheets',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Bottom 50% Percentile Standard Deviation of Tutorial Sheets Start Time',\r\n                fontSize: 25\r\n            },\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data;\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                var progressScores = [];\r\n                var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n                var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n                var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n                var PercentAvgSheet1to8 = [];\r\n                var DaysAfterLectMeanSheet1to8 = [];\r\n                var Sheet1to8SD = [];\r\n                var Percentile1to8SD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[97];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n                    for (var j =8; j <= 90; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 154\r\n                        }\r\n                        else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                            DayNumber -= 286;\r\n                        } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                            DayNumber += 52;\r\n                        } else {\r\n                            DayNumber += 45\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 8; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                console.log(dictSheetArray)\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n                //need to convert into single array of objects\r\n\r\n                const data = progressScores.map((x, i) => {\r\n                    return {\r\n                        x: x,\r\n                        y: DaysAfterLectMeanSheet1to8[i]\r\n                    };\r\n                });\r\n                for (var i =0; i< data.length; i++){\r\n                    dataNeed.push(data[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass MeanStart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Mean Start time of sheets vs Progress Grade',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Mean Start time of sheets 1-8 vs Progress Grade',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default MeanStart;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed =[];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n    var progressScores = [];\r\n    var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n    var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n    var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[97];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n        for (var j =8; j <= 90; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 154\r\n            }\r\n            else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                DayNumber -= 286;\r\n            } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                DayNumber += 52;\r\n            } else {\r\n                DayNumber += 45\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 8; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n\r\n    // filter out top 60%\r\n    // progressScores\r\n    var top40Percent = [];\r\n    var top40marks = [];\r\n        for(var i=0; i < progressScores.length; i++){\r\n            if(progressScores[i] >= 60){\r\n                top40Percent.push(progressScores[i])\r\n                top40marks.push(PercentAvgSheet1to8[i])\r\n            }\r\n        }\r\n\r\n                //need to convert into single array of objects\r\n\r\n    const data = top40marks.map((x, i) => {\r\n        return {\r\n            x: x,\r\n            y: top40Percent[i]\r\n        };\r\n    });\r\n\r\n    for(var i=0; i < data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n//function to work out week of the year\r\nvar weekOfYear = function(date){\r\nvar d = new Date(+date);\r\nd.setHours(0,0,0);\r\nd.setDate(d.getDate()+4-(d.getDay()||7));\r\nreturn Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n};\r\n\r\n//function to work out the current day of the year\r\nDate.prototype.isLeapYear = function() {\r\nvar year = this.getFullYear();\r\nif((year & 3) != 0) return false;\r\nreturn ((year % 100) != 0 || (year % 400) == 0);\r\n};\r\n\r\n// Get Day of Year\r\nDate.prototype.getDOY = function() {\r\nvar dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nvar mn = this.getMonth();\r\nvar dn = this.getDate();\r\nvar dayOfYear = dayCount[mn] + dn;\r\nif(mn > 1 && this.isLeapYear()) dayOfYear++;\r\nreturn dayOfYear;\r\n};\r\n\r\nconst dayOfYear = date =>\r\nMath.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\nfunction sortNumber(a,b) {\r\nreturn a - b;\r\n}\r\n\r\nfunction quantile(array, percentile) {\r\n    array.sort(sortNumber);\r\n    var index = percentile/100. * (array.length-1);\r\n    if (Math.floor(index) == index) {\r\n        var result = array[index];\r\n    } else {\r\n        var i = Math.floor(index)\r\n        var fraction = index - i;\r\n        result = array[i] + (array[i+1] - array[i]) * fraction;\r\n    }\r\n    return result;\r\n}\r\n\r\n// calculate sum\r\nfunction sumArr(arr){\r\n    var a = arr.slice();\r\n    return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n}\r\n\r\n//calculate average\r\nfunction calcAverage(arr){\r\n    var a = arr.slice();\r\n    if (a.length){\r\n        var sum = sumArr(a);\r\n        var avg = sum / a.length;\r\n        return avg;\r\n    }    \r\n    return false;\r\n}\r\n\r\n// Standard deviation\r\nfunction getSD(data) {\r\n    let m = calcAverage(data);\r\n    return Math.sqrt(data.reduce(function (sq, n) {\r\n            return sq + Math.pow(n - m, 2);\r\n        }, 0) / (data.length - 1));\r\n};\r\n\r\nclass MoreThan extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Students Percentile Standard Deviation of Tutorial Sheets who got a 2.1 or above',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Students Percentile Standard Deviation of Tutorial Sheets who got a 2.1 or above',\r\n                fontSize: 25,\r\n            },\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default MoreThan;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed = [];\r\nvar data = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                var progressScores = [];\r\n                var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n                var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n                var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n                var PercentAvgSheet1to8 = [];\r\n                var DaysAfterLectMeanSheet1to8 = [];\r\n                var Sheet1to8SD = [];\r\n                var Percentile1to8SD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[97];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n                    for (var j =8; j <= 90; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 154\r\n                        }\r\n                        else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                            DayNumber -= 286;\r\n                        } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                            DayNumber += 52;\r\n                        } else {\r\n                            DayNumber += 45\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 8; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                console.log(dictSheetArray)\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n                //need to convert into single array of objects\r\n\r\n                const data = PercentAvgSheet1to8.map((x, i) => {\r\n                    return {\r\n                        x: x,\r\n                        y: progressScores[i]\r\n                    };\r\n                });\r\n                for (var i =0; i< data.length; i++){\r\n                    dataNeed.push(data[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass ProgressVSStud extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Correlation between Start Times after Lecture Sheets and Progress Marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'A graph of Progress Test Marks vs Average Student Percentile of Start Times Sheet1-8',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Average Sheet Percentile Per Student'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default ProgressVSStud;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n    var progressScores = [];\r\n    var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n    var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n    var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[97];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n        for (var j =8; j <= 90; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 154\r\n            }\r\n            else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                DayNumber -= 286;\r\n            } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                DayNumber += 52;\r\n            } else {\r\n                DayNumber += 45\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 8; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    console.log(dictSheetArray)\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n    //filter out top 50%\r\n    const PercentAvgSheet1to8Top50 = PercentAvgSheet1to8.filter(studentPercent => studentPercent > 50);\r\n\r\n    // filter out top 50%\r\n    // progressScores\r\n    var top50Percent = [];\r\n    var top50marks = [];\r\n    for(var i=0; i < PercentAvgSheet1to8.length; i++){\r\n        if(PercentAvgSheet1to8[i] > 50){\r\n            top50Percent.push(PercentAvgSheet1to8[i])\r\n            top50marks.push(progressScores[i])\r\n        }\r\n    }\r\n\r\n    //need to convert into single array of objects\r\n\r\n    const data = top50marks.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: top50Percent[i]\r\n    };\r\n    });\r\n\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet4 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Sheet4 = Q2 percentile for when sheet was first looked at VS progress Marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet4 = Q2 percentile for when sheet was first looked at VS progress Marks',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet4;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n    // Student is an array of objects where each object is something like:\r\n    // {\r\n    //   \"Given\": \"Steffi Graf\",\r\n    //   \"Last\": \"Graf\",     \r\n    //   \"Class\": \"MECH50010 - Fluid Mechanics 2 2020-2021\",\r\n    //   \"Gender\": \"Female\"\r\n    //   \"Attempts\" : \"0\"\r\n    // }\r\n    //make dictionary for tutorial sheets - put in same order as csv\r\n    var progressScores = [];\r\n    var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n    var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n    var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[97];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n        for (var j =8; j <= 90; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 154\r\n            }\r\n            else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                DayNumber -= 286;\r\n            } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                DayNumber += 52;\r\n            } else {\r\n                DayNumber += 45\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 8; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n    //need to convert into single array of objects\r\n    const data = progressScores.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: dictPercentile.P5[i]\r\n    };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet5 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Sheet5 Percentile for when sheet was first looked at vs Total progress marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet5=Q1 Percentile for when sheet was first looked at vs Total progress marks',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Percentile Of Start times after Lecture for Sheet 5'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet5;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    var progressScores = [];\r\n    var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n    var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n    var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[97];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n        for (var j =8; j <= 90; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 154\r\n            }\r\n            else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                DayNumber -= 286;\r\n            } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                DayNumber += 52;\r\n            } else {\r\n                DayNumber += 45\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n\r\n    // for sheet 6-8: Object.keys(dictSheet).length instead of 8\r\n    for(var i=5; i <= 7; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n    //need to convert into single array of objects\r\n\r\n    const data = progressScores.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: PercentAvgSheet1to8[i]\r\n    };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet6to8 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Sheet6-8=Q3 Percentile for when sheet was first looked at vs Total progress marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet6-8 Percentile for when sheet was first looked (Q3) at vs Total progress marks',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Percentile Of Start times after Lecture for Sheet 6-8'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet6to8;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary for tutorial sheets - put in same order as csv\r\n    var progressScores = [];\r\n    var ExamResults = [];\r\n    var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n    var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n    var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n    var PercentAvgSheet1to9 = [];\r\n    var DaysAfterLectMeanSheet1to9 = [];\r\n    var Sheet1to9SD = [];\r\n    var Percentile1to9SD = [];\r\n    //All year\r\n    var PercentAvgAll = [];\r\n    var DaysAfterLectMeanAll = [];\r\n    var AllSD = [];\r\n    var PercentileAllSD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[104];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat(progressScoremaybe));\r\n        var ExamKey = Object.keys(students[i])[105];\r\n        var ExamScoremaybe = students[i][ExamKey];\r\n        ExamResults.push(parseFloat(ExamScoremaybe));\r\n        for (var j =9; j <= 95; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 158\r\n            }\r\n            else if (dayOfYear(date) >= 280){\r\n                DayNumber -= 280;\r\n            } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                DayNumber += 71;\r\n            } else {\r\n                DayNumber += 78\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 9; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n    //filter out top 50%\r\n    const PercentAvgSheet1to9Top50 = PercentAvgSheet1to9.filter(studentPercent => studentPercent > 50);\r\n    // filter out top 50%\r\n    // progressScores\r\n    var top50Percent = [];\r\n    var top50marks = [];\r\n    for(var i=0; i < PercentAvgSheet1to9.length; i++){\r\n        if(PercentAvgSheet1to9[i] > 50){\r\n            top50Percent.push(PercentAvgSheet1to9[i])\r\n            top50marks.push(progressScores[i])\r\n        }\r\n    }\r\n\r\n    //need to convert into single array of objects\r\n\r\n    const data = top50marks.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: top50Percent[i]\r\n    };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Top2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Top 0-50th Percentiles of Students Tutorial Sheet Start Times vs Progress Marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Top 50% Percentile Standard Deviation of Tutorial Sheets',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Top2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar binCount = [0, 1, 3, 6, 15, 20, 20, 40, 24, 37];\r\nvar binCount2 = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n\r\n\r\n                //creating histogram bins with frequency array\r\n                var bins = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n                var binCount = [];\r\n                for (var i=1; i<bins.length; i++){\r\n                    j=0;\r\n                    var count = 0;\r\n                    while(j < progressScores.length){\r\n                        if(progressScores[j] < bins[i] && progressScores[j] >= bins[i-1]){\r\n                            count ++\r\n                        }\r\n                        j++;\r\n                    }\r\n                    binCount.push(count)\r\n                }\r\n                for (var i =0; i< binCount.length; i++){\r\n                    binCount2.push(binCount[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass SDHist2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: [\"[0,10]\", \"[10,20]\", \"[20,30]\", \"[30,40]\", \"[40,50]\", \"[50,60]\", \"[60,70]\", \"[70,80]\", \"[80,90]\", \"[90,100]\"],\r\n            datasets: [{\r\n            label: 'Average Progress Mark',\r\n            data: binCount2,\r\n            backgroundColor: [\r\n                '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\r\n\r\n            ],\r\n            borderColor: [\r\n                '#0000cc',\r\n            ],\r\n            borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: false,\r\n            scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                maxRotation: 90,\r\n                minRotation: 80\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                beginAtZero: true\r\n                }\r\n            }]\r\n            },\r\n            maintainAspectRatio: false,\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: '2019 Progress Test Scores',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Frequency'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default SDHist2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed = [];\r\nvar data = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary for tutorial sheets - put in same order as csv\r\n    var progressScores = [];\r\n    var ExamResults = [];\r\n    var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n    var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n    var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n    var PercentAvgSheet1to9 = [];\r\n    var DaysAfterLectMeanSheet1to9 = [];\r\n    var Sheet1to9SD = [];\r\n    var Percentile1to9SD = [];\r\n    //All year\r\n    var PercentAvgAll = [];\r\n    var DaysAfterLectMeanAll = [];\r\n    var AllSD = [];\r\n    var PercentileAllSD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[104];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat(progressScoremaybe));\r\n        var ExamKey = Object.keys(students[i])[105];\r\n        var ExamScoremaybe = students[i][ExamKey];\r\n        ExamResults.push(parseFloat(ExamScoremaybe));\r\n        for (var j =9; j <= 95; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 158\r\n            }\r\n            else if (dayOfYear(date) >= 280){\r\n                DayNumber -= 280;\r\n            } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                DayNumber += 71;\r\n            } else {\r\n                DayNumber += 78\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 9; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n    //need to convert into single array of objects\r\n\r\n    const data = PercentAvgSheet1to9.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: progressScores[i]\r\n    };\r\n                });\r\n                for (var i =0; i< data.length; i++){\r\n                    dataNeed.push(data[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass ProgressVSStud2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Correlation between Start Times after Lecture Sheets and Progress Marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'A graph of Progress Test Marks vs Average Student Percentile Sheet1-9- 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Average Sheet Percentile Per Student'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default ProgressVSStud2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data;\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n                //need to convert into single array of objects\r\n\r\n                const data = progressScores.map((x, i) => {\r\n                return {\r\n                    x: x,\r\n                    y: PercentAvgSheet1to9[i]\r\n                };\r\n                });\r\n\r\n                for (var i =0; i< data.length; i++){\r\n                    dataNeed.push(data[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass PercenS1to82k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Correlation between Start Times after Lecture Sheets and Progress Marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Average Percentile of Sheet 1-9 of When students opened the sheets after Lecture for 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Average Percentile of Sheet 1-9'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default PercenS1to82k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar binCount = [];\r\nvar binCount2 = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n\r\n\r\n                //creating histogram bins with frequency array\r\n                var bins = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n                var binCount = [];\r\n                for (var i=1; i<bins.length; i++){\r\n                    j=0;\r\n                    var count = 0;\r\n                    while(j < progressScores.length){\r\n                        if(progressScores[j] < bins[i] && progressScores[j] >= bins[i-1]){\r\n                            count ++\r\n                        }\r\n                        j++;\r\n                    }\r\n                    binCount.push(count)\r\n                }    \r\n                for (var i =0; i< binCount.length; i++){\r\n                    binCount2.push(binCount[i])\r\n                }       \r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass PercentHis2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: [\"[0,10]\", \"[10,20]\", \"[20,30]\", \"[30,40]\", \"[40,50]\", \"[50,60]\", \"[60,70]\", \"[70,80]\", \"[80,90]\", \"[90,100]\"],\r\n            datasets: [{\r\n            label: 'Average Progress Mark',\r\n            data: binCount2,\r\n            backgroundColor: [\r\n                '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\r\n\r\n            ],\r\n            borderColor: [\r\n                '#0000cc',\r\n            ],\r\n            borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: false,\r\n            scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                maxRotation: 90,\r\n                minRotation: 80\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                beginAtZero: true\r\n                }\r\n            }]\r\n            }\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Histogram of Average Percentile Of Students showing when Sheets were opened after Lecture - 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Frequency'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default PercentHis2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar binCount = [];\r\nvar binCount2 = [];\r\nvar data;\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n    var progressScores = [];\r\n    var ExamResults = [];\r\n    var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n    var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n    var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    //All year\r\n    var PercentAvgAll = [];\r\n    var DaysAfterLectMeanAll = [];\r\n    var AllSD = [];\r\n    var PercentileAllSD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[104];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat(progressScoremaybe));\r\n        var ExamKey = Object.keys(students[i])[105];\r\n        var ExamScoremaybe = students[i][ExamKey];\r\n        ExamResults.push(parseFloat(ExamScoremaybe));\r\n        for (var j =9; j <= 95; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 158\r\n            }\r\n            else if (dayOfYear(date) >= 280){\r\n                DayNumber -= 280;\r\n            } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                DayNumber += 71;\r\n            } else {\r\n                DayNumber += 78\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 9; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n    //creating histogram bins with frequency array\r\n    var bins = [0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144, 156, 168, 180, 192, 204, 216]\r\n    var binCount = [];\r\n    for (var i=1; i<bins.length; i++){\r\n        j=0;\r\n        var count = 0;\r\n        while(j < DaysAfterLectMeanSheet1to8.length){\r\n            if(DaysAfterLectMeanSheet1to8[j] < bins[i] && DaysAfterLectMeanSheet1to8[j] >= bins[i-1]){\r\n                count ++\r\n            }\r\n            j++;\r\n        }\r\n        binCount.push(count)\r\n    }\r\n                for (var i =0; i< binCount.length; i++){\r\n                    binCount2.push(binCount[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass AvgTimeToComplete2019 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {\r\n            labels: [\"[0,12]\", \"[12,24]\", \"[24,36]\", \"[36,48]\", \"[48,60]\", \"[60,72]\", \"[72,84]\", \"[84,96]\", \"[108,120]\", \"[120, 132]\", \"[132,144]\", \"[144,156]\", \"[156,168]\", \"[168,180]\", \"[180,192]\", \"[192,204]\", \"[204,216]\"],\r\n            datasets: [{\r\n            label: 'Average time taken after lecture to complete all tutorial sheets',\r\n            data: binCount2,\r\n            backgroundColor: [\r\n                '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\r\n\r\n            ],\r\n            borderColor: [\r\n                '#0000cc',\r\n            ],\r\n            borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: false,\r\n            scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                maxRotation: 90,\r\n                minRotation: 80\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                beginAtZero: true\r\n                }\r\n            }]\r\n            }\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Average time taken in days after lecture to Complete All Tutorial Sheets in 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Average Time Taken to Complete Tutorial Sheets After Lecture'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Frequency'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default AvgTimeToComplete2019;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data;\r\nvar dataNeed = [];\r\n\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary for tutorial sheets - put in same order as csv\r\n    var progressScores = [];\r\n    var ExamResults = [];\r\n    var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n    var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n    var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n    var PercentAvgSheet1to9 = [];\r\n    var DaysAfterLectMeanSheet1to9 = [];\r\n    var Sheet1to9SD = [];\r\n    var Percentile1to9SD = [];\r\n    //All year\r\n    var PercentAvgAll = [];\r\n    var DaysAfterLectMeanAll = [];\r\n    var AllSD = [];\r\n    var PercentileAllSD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[104];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat(progressScoremaybe));\r\n        var ExamKey = Object.keys(students[i])[105];\r\n        var ExamScoremaybe = students[i][ExamKey];\r\n        ExamResults.push(parseFloat(ExamScoremaybe));\r\n        for (var j =9; j <= 95; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 158\r\n            }\r\n            else if (dayOfYear(date) >= 280){\r\n                DayNumber -= 280;\r\n            } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                DayNumber += 71;\r\n            } else {\r\n                DayNumber += 78\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 9; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n    //need to convert into single array of objects\r\n\r\n    const data = progressScores.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: DaysAfterLectMeanSheet1to9[i]\r\n    };\r\n                });\r\n                for (var i =0; i< data.length; i++){\r\n                    dataNeed.push(data[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass MeanStart2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Mean Start time of sheets vs Progress Grade',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Mean Start time of sheets 1-9 vs Progress Grade for 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets 1-9 after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false, \r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default MeanStart2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed =[];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n\r\n                // filter out top 60%\r\n\r\n                // progressScores\r\n                var top40Percent = [];\r\n                var top40marks = [];\r\n                for(var i=0; i < progressScores.length; i++){\r\n                    if(progressScores[i] >= 60){\r\n                        top40Percent.push(progressScores[i])\r\n                        top40marks.push(PercentAvgSheet1to9[i])\r\n                    }\r\n                }\r\n\r\n                //need to convert into single array of objects\r\n\r\n                const data = top40marks.map((x, i) => {\r\n                return {\r\n                    x: x,\r\n                    y: top40Percent[i]\r\n                };\r\n    });\r\n\r\n    for(var i=0; i < data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n//function to work out week of the year\r\nvar weekOfYear = function(date){\r\nvar d = new Date(+date);\r\nd.setHours(0,0,0);\r\nd.setDate(d.getDate()+4-(d.getDay()||7));\r\nreturn Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n};\r\n\r\n//function to work out the current day of the year\r\nDate.prototype.isLeapYear = function() {\r\nvar year = this.getFullYear();\r\nif((year & 3) != 0) return false;\r\nreturn ((year % 100) != 0 || (year % 400) == 0);\r\n};\r\n\r\n// Get Day of Year\r\nDate.prototype.getDOY = function() {\r\nvar dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nvar mn = this.getMonth();\r\nvar dn = this.getDate();\r\nvar dayOfYear = dayCount[mn] + dn;\r\nif(mn > 1 && this.isLeapYear()) dayOfYear++;\r\nreturn dayOfYear;\r\n};\r\n\r\nconst dayOfYear = date =>\r\nMath.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\nfunction sortNumber(a,b) {\r\nreturn a - b;\r\n}\r\n\r\nfunction quantile(array, percentile) {\r\n    array.sort(sortNumber);\r\n    var index = percentile/100. * (array.length-1);\r\n    if (Math.floor(index) == index) {\r\n        var result = array[index];\r\n    } else {\r\n        var i = Math.floor(index)\r\n        var fraction = index - i;\r\n        result = array[i] + (array[i+1] - array[i]) * fraction;\r\n    }\r\n    return result;\r\n}\r\n\r\n// calculate sum\r\nfunction sumArr(arr){\r\n    var a = arr.slice();\r\n    return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n}\r\n\r\n//calculate average\r\nfunction calcAverage(arr){\r\n    var a = arr.slice();\r\n    if (a.length){\r\n        var sum = sumArr(a);\r\n        var avg = sum / a.length;\r\n        return avg;\r\n    }    \r\n    return false;\r\n}\r\n\r\n// Standard deviation\r\nfunction getSD(data) {\r\n    let m = calcAverage(data);\r\n    return Math.sqrt(data.reduce(function (sq, n) {\r\n            return sq + Math.pow(n - m, 2);\r\n        }, 0) / (data.length - 1));\r\n};\r\n\r\nclass MoreThan2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n                \r\n            datasets: [{ //input data\r\n                label: 'Students Percentile Standard Deviation of Tutorial Sheets who got a 2.1 or above',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Students Percentile Standard Deviation of Tutorial Sheets who got a 2.1 or above in 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default MoreThan2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed =[];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary for tutorial sheets - put in same order as csv\r\n    var progressScores = [];\r\n    var ExamResults = [];\r\n    var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n    var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n    var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n    var PercentAvgSheet1to9 = [];\r\n    var DaysAfterLectMeanSheet1to9 = [];\r\n    var Sheet1to9SD = [];\r\n    var Percentile1to9SD = [];\r\n    //All year\r\n    var PercentAvgAll = [];\r\n    var DaysAfterLectMeanAll = [];\r\n    var AllSD = [];\r\n    var PercentileAllSD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[104];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat(progressScoremaybe));\r\n        var ExamKey = Object.keys(students[i])[105];\r\n        var ExamScoremaybe = students[i][ExamKey];\r\n        ExamResults.push(parseFloat(ExamScoremaybe));\r\n        for (var j =9; j <= 95; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 158\r\n            }\r\n            else if (dayOfYear(date) >= 280){\r\n                DayNumber -= 280;\r\n            } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                DayNumber += 71;\r\n            } else {\r\n                DayNumber += 78\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 9; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n\r\n    // filter out top 50%\r\n    // progressScores\r\n    var bottom50Percent = [];\r\n    var bottom50marks = [];\r\n    for(var i=0; i < PercentAvgSheet1to9.length; i++){\r\n        if(PercentAvgSheet1to9[i] < 50){\r\n            bottom50Percent.push(PercentAvgSheet1to9[i])\r\n            bottom50marks.push(progressScores[i])\r\n        }\r\n    }\r\n\r\n    //need to convert into single array of objects\r\n\r\n    const data = bottom50marks.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: bottom50Percent[i]\r\n    };\r\n    });\r\n\r\n    for(var i=0; i < data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n//function to work out week of the year\r\nvar weekOfYear = function(date){\r\nvar d = new Date(+date);\r\nd.setHours(0,0,0);\r\nd.setDate(d.getDate()+4-(d.getDay()||7));\r\nreturn Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n};\r\n\r\n//function to work out the current day of the year\r\nDate.prototype.isLeapYear = function() {\r\nvar year = this.getFullYear();\r\nif((year & 3) != 0) return false;\r\nreturn ((year % 100) != 0 || (year % 400) == 0);\r\n};\r\n\r\n// Get Day of Year\r\nDate.prototype.getDOY = function() {\r\nvar dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nvar mn = this.getMonth();\r\nvar dn = this.getDate();\r\nvar dayOfYear = dayCount[mn] + dn;\r\nif(mn > 1 && this.isLeapYear()) dayOfYear++;\r\nreturn dayOfYear;\r\n};\r\n\r\nconst dayOfYear = date =>\r\nMath.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\nfunction sortNumber(a,b) {\r\nreturn a - b;\r\n}\r\n\r\nfunction quantile(array, percentile) {\r\n    array.sort(sortNumber);\r\n    var index = percentile/100. * (array.length-1);\r\n    if (Math.floor(index) == index) {\r\n        var result = array[index];\r\n    } else {\r\n        var i = Math.floor(index)\r\n        var fraction = index - i;\r\n        result = array[i] + (array[i+1] - array[i]) * fraction;\r\n    }\r\n    return result;\r\n}\r\n\r\n// calculate sum\r\nfunction sumArr(arr){\r\n    var a = arr.slice();\r\n    return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n}\r\n\r\n//calculate average\r\nfunction calcAverage(arr){\r\n    var a = arr.slice();\r\n    if (a.length){\r\n        var sum = sumArr(a);\r\n        var avg = sum / a.length;\r\n        return avg;\r\n    }    \r\n    return false;\r\n}\r\n\r\n// Standard deviation\r\nfunction getSD(data) {\r\n    let m = calcAverage(data);\r\n    return Math.sqrt(data.reduce(function (sq, n) {\r\n            return sq + Math.pow(n - m, 2);\r\n        }, 0) / (data.length - 1));\r\n};\r\n\r\nclass Bottom2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Bottom 50% Percentile Standard Deviation of Tutorial Sheets',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Bottom 50% Percentile Standard Deviation of Tutorial Sheets in 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Bottom2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n                //need to convert into single array of objects\r\n\r\n                const data = progressScores.map((x, i) => {\r\n                return {\r\n                    x: x,\r\n                    y: PercentAvgSheet1to9[i]\r\n                };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet6to82k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Sheet6-8=Q3 Percentile for when sheet was first looked at vs Total progress marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet6-8 Percentile for when sheet was first looked (Q3) at vs Total progress marks for 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Percentile Of Start times after Lecture for Sheet 6-8'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet6to82k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar dataNeed = [];\r\nvar data;\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary for tutorial sheets - put in same order as csv\r\n    var progressScores = [];\r\n    var ExamResults = [];\r\n    var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n    var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n    var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n    var PercentAvgSheet1to9 = [];\r\n    var DaysAfterLectMeanSheet1to9 = [];\r\n    var Sheet1to9SD = [];\r\n    var Percentile1to9SD = [];\r\n    //All year\r\n    var PercentAvgAll = [];\r\n    var DaysAfterLectMeanAll = [];\r\n    var AllSD = [];\r\n    var PercentileAllSD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[104];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat(progressScoremaybe));\r\n        var ExamKey = Object.keys(students[i])[105];\r\n        var ExamScoremaybe = students[i][ExamKey];\r\n        ExamResults.push(parseFloat(ExamScoremaybe));\r\n        for (var j =9; j <= 95; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 158\r\n            }\r\n            else if (dayOfYear(date) >= 280){\r\n                DayNumber -= 280;\r\n            } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                DayNumber += 71;\r\n            } else {\r\n                DayNumber += 78\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 9; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n    //need to convert into single array of objects\r\n\r\n    const data = progressScores.map((x, i) => {\r\n    return {\r\n        x: x,\r\n        y: dictPercentile.P2[i]\r\n    };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet2k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Sheet2 Percentile for when sheet was first looked at vs Total progress marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet2=Q1 Percentile for when sheet was first looked at vs Total progress marks for 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Percentile Of Start times after Lecture for Sheet 2'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet2k19;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n                //need to convert into single array of objects\r\n\r\n                const data = progressScores.map((x, i) => {\r\n                return {\r\n                    x: x,\r\n                    y: dictPercentile.P5[i]\r\n                };\r\n    });\r\n\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet52k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Sheet5 Percentile for when sheet was first looked at vs Total progress marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet5=Q2 Percentile for when sheet was first looked at vs Total progress marks for 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Percentile Of Start times after Lecture for Sheet 5'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet52k19;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Chart from 'chart.js';\n// import AvgTimeToComplete2020 from '../components/2020Graphs/AvgTimeToCompleteSheet';\nimport MinSheetAccessed from '../components/2020Graphs/MinSheetAccessed';\nimport MinSheetAccessed2k19 from '../components/2019Graphs/MinSheetAccessed';\nimport Bottom from '../components/2020Graphs/BottomHalfPercent';\nimport MeanStart from '../components/2020Graphs/MeanStartVSProgressGrade';\nimport MoreThan from '../components/2020Graphs/MoreThan60';\n// import PercentHis from '../components/2020Graphs/percentileHistogram';\n// import PercenS1to8 from '../components/2020Graphs/PercentS1toS8vsProgress';\nimport ProgressVSStud from '../components/2020Graphs/ProgressVSStudentPercen';\n// import SDHist from '../components/2020Graphs/SDHistogram';\nimport Sheet4 from '../components/2020Graphs/Sheet4Q2';\nimport Sheet5 from '../components/2020Graphs/Sheet5Q1';\nimport Sheet6to8 from '../components/2020Graphs/Sheet6to8Q3';\n// import StartTime from '../components/2020Graphs/StartTimeCorrelation';\n// import Time from '../components/2020Graphs/TimeAnyalsis';\nimport '../App.css';\nimport Top2k19 from '../components/2019Graphs/TopHalfPercent';\nimport SDHist2k19 from '../components/2019Graphs/SDHistogram';\nimport ProgressVSStud2k19 from '../components/2019Graphs/ProgressVSStudentPercen';\nimport PercenS1to82k19 from '../components/2019Graphs/PercentS1toS8vsProgress';\nimport PercentHis2k19 from '../components/2019Graphs/percentileHistogram';\n\nimport AvgTimeToComplete2019 from '../components/2019Graphs/AvgTimeToCompleteSheet';\nimport MeanStart2k19 from '../components/2019Graphs/MeanStartVSProgressGrade';\n\nimport MoreThan2k19 from '../components/2019Graphs/MoreThan60';\nimport Bottom2k19 from '../components/2019Graphs/BottomHalfPercent';\nimport Sheet6to82k19 from '../components/2019Graphs/Sheet6to8Q3';\nimport Sheet2k19 from '../components/2019Graphs/Sheet2Q1';\nimport Sheet52k19 from '../components/2019Graphs/Sheet5Q2';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\n// App\nclass AddNewPost extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <div className=\"main chart-wrapper\">\n            <MinSheetAccessed\n            />\n          </div>\n          <div className=\"main chart-wrapper\">\n            <MinSheetAccessed2k19\n            />\n          </div>\n            <div className=\"sub chart-wrapper\">\n              <ProgressVSStud2k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <ProgressVSStud\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <MeanStart2k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <MeanStart\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <Sheet6to8\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <Sheet6to82k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <Sheet4\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <Sheet2k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <Sheet52k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <Sheet5\n              />\n            </div>\n\n        </div>\n      \n      </BrowserRouter>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nexport default AddNewPost;\n\n\n","import React from \"react\";\nimport { Container, Button } from \"shards-react\";\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <div className=\"error\">\n      <div className=\"error__content\">\n        <h2>500</h2>\n        <h3>Something went wrong!</h3>\n        <p>There was a problem on our end. Please try again later.</p>\n        <Button pill>&larr; Go Back</Button>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default Errors;\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar binCount = [0, 1, 3, 6, 15, 20, 20, 40, 24, 37];\r\nvar binCount2 = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    var progressScores = [];\r\n    var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n    var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n    var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n    var PercentAvgSheet1to8 = [];\r\n    var DaysAfterLectMeanSheet1to8 = [];\r\n    var Sheet1to8SD = [];\r\n    var Percentile1to8SD = [];\r\n    // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n    for (var i =0; i < students.length; i++){\r\n        var count = -1;\r\n        var LectureCount = 0;\r\n        var progressKey = Object.keys(students[i])[97];\r\n        var progressScoremaybe = students[i][progressKey];\r\n        progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n        for (var j =8; j <= 90; j += 5){\r\n            var key = Object.keys(students[i])[j]; // access title of start times\r\n            var value = students[i][key] // gives date in raw form\r\n                     // console.log(\"Raw form date\" + \" \" + value)\r\n            //convert date string into a time object\r\n            var date = new Date(value);\r\n                    // console.log(\"date\" + \" \" + date)\r\n            var DayNumber = dayOfYear(date);\r\n                    // console.log(\"day number is\" + \" \" + DayNumber)\r\n            //need to account for imperial calendar with 3rd october as week 1\r\n            if (value !== 0){\r\n                count ++;\r\n            } else{\r\n                continue\r\n            }\r\n            if (value === \"\"){\r\n                DayNumber = 154\r\n            }\r\n            else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                DayNumber -= 286;\r\n            } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                DayNumber += 52;\r\n            } else {\r\n                DayNumber += 45\r\n            }\r\n            key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n            dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n            LectureCount ++\r\n        }\r\n    };\r\n\r\n    //create percentiles\r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n    for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n        key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n        key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n        for (var j =0; j <= students.length; j ++){\r\n            count = 0;\r\n            for(var z=0; z <= students.length; z++){\r\n                if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                    count ++\r\n                } \r\n            }\r\n            dictPercentile[key][j] = (count/students.length)*100;\r\n        }\r\n    };\r\n\r\n    var dictSheetArray = [];\r\n    var dictPercentileArray = [];\r\n    // console.log(Object.values(dictPercentile.P1))\r\n\r\n    // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n    for(var i=0; i < 8; i++){\r\n        dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n        dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n    }\r\n\r\n    //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n    var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n    var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n    for(var i=0; i<dictSheetTranspose.length; i++){\r\n        DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n        PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n        Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n        Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n    }\r\n\r\n    //creating histogram bins with frequency array\r\n    var bins = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n    for (var i=1; i<bins.length; i++){\r\n        j=0;\r\n        var count = 0;\r\n        while(j < progressScores.length){\r\n            if(progressScores[j] < bins[i] && progressScores[j] >= bins[i-1]){\r\n                count ++\r\n            }\r\n            j++;\r\n        }\r\n        binCount.push(count)\r\n    }\r\n    for (var i =0; i< binCount.length; i++){\r\n        binCount2.push(binCount[i])\r\n    }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass SDHist extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: [\"[0,10]\", \"[10,20]\", \"[20,30]\", \"[30,40]\", \"[40,50]\", \"[50,60]\", \"[60,70]\", \"[70,80]\", \"[80,90]\", \"[90,100]\"],\r\n            datasets: [{\r\n            label: 'Average Progress Mark',\r\n            data: binCount2,\r\n            backgroundColor: [\r\n                '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\r\n\r\n            ],\r\n            borderColor: [\r\n                '#0000cc',\r\n            ],\r\n            borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: false,\r\n            scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                maxRotation: 90,\r\n                minRotation: 80\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                beginAtZero: true\r\n                }\r\n            }]\r\n            }\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Progress Test Scores',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Frequency'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default SDHist;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Chart from 'chart.js';\n// import AvgTimeToComplete2020 from '../components/2020Graphs/AvgTimeToCompleteSheet';\n// import MinSheetAccessed from '../components/2020Graphs/MinSheetAccessed';\n// import MinSheetAccessed2k19 from '../components/2019Graphs/MinSheetAccessed';\n// import Bottom from '../components/2020Graphs/BottomHalfPercent';\n// import MeanStart from '../components/2020Graphs/MeanStartVSProgressGrade';\n// import MoreThan from '../components/2020Graphs/MoreThan60';\n// import PercentHis from '../components/2020Graphs/percentileHistogram';\n// import PercenS1to8 from '../components/2020Graphs/PercentS1toS8vsProgress';\n// import ProgressVSStud from '../components/2020Graphs/ProgressVSStudentPercen';\n// import SDHist from '../components/2020Graphs/SDHistogram';\nimport Sheet4 from '../components/2020Graphs/Sheet4Q2';\nimport Sheet5 from '../components/2020Graphs/Sheet5Q1';\nimport Sheet6to8 from '../components/2020Graphs/Sheet6to8Q3';\n// import StartTime from '../components/2020Graphs/StartTimeCorrelation';\n// import Time from '../components/2020Graphs/TimeAnyalsis';\nimport '../App.css';\nimport Top2k19 from '../components/2019Graphs/TopHalfPercent';\nimport SDHist2k19 from '../components/2019Graphs/SDHistogram';\nimport SDHist from '../components/2020Graphs/SDHistogram';\nimport ProgressVSStud2k19 from '../components/2019Graphs/ProgressVSStudentPercen';\nimport PercenS1to82k19 from '../components/2019Graphs/PercentS1toS8vsProgress';\nimport PercentHis2k19 from '../components/2019Graphs/percentileHistogram';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport AvgTimeToComplete2019 from '../components/2019Graphs/AvgTimeToCompleteSheet';\nimport MeanStart2k19 from '../components/2019Graphs/MeanStartVSProgressGrade';\nimport MeanStart from '../components/2019Graphs/MeanStartVSProgressGrade';\nimport MoreThan2k19 from '../components/2019Graphs/MoreThan60';\nimport Bottom2k19 from '../components/2019Graphs/BottomHalfPercent';\nimport Sheet6to82k19 from '../components/2019Graphs/Sheet6to8Q3';\nimport Sheet2k19 from '../components/2019Graphs/Sheet2Q1';\nimport Sheet52k19 from '../components/2019Graphs/Sheet5Q2';\n\n\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\n// App\nclass ComponentsOverview extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        <div className=\"main chart-wrapper\">\n              <SDHist\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <SDHist2k19\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Sheet5\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Sheet4\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Sheet6to8\n              />\n            </div>\n        <div className=\"main chart-wrapper\">\n              <Sheet52k19\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Sheet2k19\n              />\n            </div>\n\n            <div className=\"main chart-wrapper\">\n              <Sheet6to82k19\n              />\n            </div>\n\n            <div className=\"sub chart-wrapper\">\n              <ProgressVSStud2k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <PercenS1to82k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <PercentHis2k19\n              />\n            </div>\n\n        </div>\n      \n      </BrowserRouter>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nexport default ComponentsOverview;\n\n\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Card, CardBody, Form, FormInput } from \"shards-react\";\n\nimport \"react-quill/dist/quill.snow.css\";\nimport \"../../assets/quill.css\";\n\nconst Editor = () => (\n  <Card small className=\"mb-3\">\n    <CardBody>\n      <Form className=\"add-new-post\">\n        <FormInput size=\"lg\" className=\"mb-3\" placeholder=\"Your Post Title\" />\n        <ReactQuill className=\"add-new-post__editor mb-1\" />\n      </Form>\n    </CardBody>\n  </Card>\n);\n\nexport default Editor;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  Button\n} from \"shards-react\";\n\nconst SidebarActions = ({ title }) => (\n  <Card small className=\"mb-3\">\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      <ListGroup flush>\n        <ListGroupItem className=\"p-3\">\n          <span className=\"d-flex mb-2\">\n            <i className=\"material-icons mr-1\">flag</i>\n            <strong className=\"mr-1\">Status:</strong> Draft{\" \"}\n            <a className=\"ml-auto\" href=\"#\">\n              Edit\n            </a>\n          </span>\n          <span className=\"d-flex mb-2\">\n            <i className=\"material-icons mr-1\">visibility</i>\n            <strong className=\"mr-1\">Visibility:</strong>{\" \"}\n            <strong className=\"text-success\">Public</strong>{\" \"}\n            <a className=\"ml-auto\" href=\"#\">\n              Edit\n            </a>\n          </span>\n          <span className=\"d-flex mb-2\">\n            <i className=\"material-icons mr-1\">calendar_today</i>\n            <strong className=\"mr-1\">Schedule:</strong> Now{\" \"}\n            <a className=\"ml-auto\" href=\"#\">\n              Edit\n            </a>\n          </span>\n          <span className=\"d-flex\">\n            <i className=\"material-icons mr-1\">score</i>\n            <strong className=\"mr-1\">Readability:</strong>{\" \"}\n            <strong className=\"text-warning\">Ok</strong>\n          </span>\n        </ListGroupItem>\n        <ListGroupItem className=\"d-flex px-3 border-0\">\n          <Button outline theme=\"accent\" size=\"sm\">\n            <i className=\"material-icons\">save</i> Save Draft\n          </Button>\n          <Button theme=\"accent\" size=\"sm\" className=\"ml-auto\">\n            <i className=\"material-icons\">file_copy</i> Publish\n          </Button>\n        </ListGroupItem>\n      </ListGroup>\n    </CardBody>\n  </Card>\n);\n\nSidebarActions.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string\n};\n\nSidebarActions.defaultProps = {\n  title: \"Actions\"\n};\n\nexport default SidebarActions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  FormCheckbox,\n  FormInput\n} from \"shards-react\";\n\nconst SidebarCategories = ({ title }) => (\n  <Card small className=\"mb-3\">\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n    <CardBody className=\"p-0\">\n      <ListGroup flush>\n        <ListGroupItem className=\"px-3 pb-2\">\n          <FormCheckbox className=\"mb-1\" value=\"uncategorized\" defaultChecked>\n            Uncategorized\n          </FormCheckbox>\n          <FormCheckbox className=\"mb-1\" value=\"design\" defaultChecked>\n            Design\n          </FormCheckbox>\n          <FormCheckbox className=\"mb-1\" value=\"development\">\n            Development\n          </FormCheckbox>\n          <FormCheckbox className=\"mb-1\" value=\"writing\">\n            Writing\n          </FormCheckbox>\n          <FormCheckbox className=\"mb-1\" value=\"books\">\n            Books\n          </FormCheckbox>\n        </ListGroupItem>\n\n        <ListGroupItem className=\"d-flex px-3\">\n          <InputGroup className=\"ml-auto\">\n            <FormInput placeholder=\"New category\" />\n            <InputGroupAddon type=\"append\">\n              <Button theme=\"white\" className=\"px-2\">\n                <i className=\"material-icons\">add</i>\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </ListGroupItem>\n      </ListGroup>\n    </CardBody>\n  </Card>\n);\n\nSidebarCategories.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string\n};\n\nSidebarCategories.defaultProps = {\n  title: \"Categories\"\n};\n\nexport default SidebarCategories;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport PageTitle from \"../components/common/PageTitle\";\nimport Editor from \"../components/add-new-post/Editor\";\nimport SidebarActions from \"../components/add-new-post/SidebarActions\";\nimport SidebarCategories from \"../components/add-new-post/SidebarCategories\";\n\nconst Tables = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    {/* Page Header */}\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle sm=\"4\" title=\"Lecturer Dashboard \" subtitle=\"Mecahnical Engineering Dashboard\" className=\"text-sm-left\" />\n    </Row>\n\n    <Row>\n      {/* Editor */}\n      <Col lg=\"9\" md=\"12\">\n        <Editor />\n      </Col>\n\n      {/* Sidebar Widgets */}\n      <Col lg=\"3\" md=\"12\">\n        <SidebarActions />\n        <SidebarCategories />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Tables;","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\nChart.plugins.register(chartTrendline);\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n                var progressScores = [];\r\n                var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n                var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n                var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n                var PercentAvgSheet1to8 = [];\r\n                var DaysAfterLectMeanSheet1to8 = [];\r\n                var Sheet1to8SD = [];\r\n                var Percentile1to8SD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[97];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n                    for (var j =8; j <= 90; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 154\r\n                        }\r\n                        else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                            DayNumber -= 286;\r\n                        } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                            DayNumber += 52;\r\n                        } else {\r\n                            DayNumber += 45\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 8; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n\r\n                //filter out top 50%\r\n                const PercentAvgSheet1to8Top50 = PercentAvgSheet1to8.filter(studentPercent => studentPercent > 50);\r\n                // filter out top 50%\r\n                // progressScores\r\n                var top50Percent = [];\r\n                var top50marks = [];\r\n                for(var i=0; i < PercentAvgSheet1to8.length; i++){\r\n                    if(PercentAvgSheet1to8[i] > 50){\r\n                        top50Percent.push(PercentAvgSheet1to8[i])\r\n                        top50marks.push(progressScores[i])\r\n                    }\r\n                }\r\n\r\n                //need to convert into single array of objects\r\n\r\n                const data = top50marks.map((x, i) => {\r\n                return {\r\n                    x: x,\r\n                    y: top50Percent[i]\r\n                };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Top extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Top 0-50th Percentiles of Students Tutorial Sheet Start Times vs Progress Marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Top 50% Percentile Standard Deviation of Tutorial Sheets',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Mean Start Time of Sheets after Lecture'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Top;\r\n","import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar binCount = [];\r\nvar binCount2 = [];\r\nvar data;\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2020_21_03_26_Mobius_Plus_PT_anonymous%2B-AWSupload.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        \r\n        function makeChart(students) { // takes in an array of students\r\n                var progressScores = [];\r\n                var dictSheet = {Sheet5:[] , Sheet4:[] , Sheet3:[] ,Sheet2:[], Sheet1:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet17:[], Sheet16:[], Sheet15:[], Sheet14:[], Sheet13:[]};\r\n                var LectureDate = [28, 21, 14, 7, 0, 49, 42, 35, 77, 70, 63, 56, 112, 105, 98, 91, 84]; //make an array of lecture start dates\r\n                var dictPercentile = {P5:[] , P4:[] , P3:[] ,P2:[], P1:[], P8:[], P7:[], P6:[], P12:[], P11:[], P10:[], P9:[], P17:[], P16:[], P15:[], P14:[], P13:[]};\r\n                var PercentAvgSheet1to8 = [];\r\n                var DaysAfterLectMeanSheet1to8 = [];\r\n                var Sheet1to8SD = [];\r\n                var Percentile1to8SD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[97];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat((progressScoremaybe/40)*100));\r\n                    for (var j =8; j <= 90; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 154\r\n                        }\r\n                        else if (dayOfYear(date) >= 286 || dayOfYear(date) < 11){\r\n                            DayNumber -= 286;\r\n                        } else if (dayOfYear(date) < 46 || dayOfYear(date) >= 11)  {\r\n                            DayNumber += 52;\r\n                        } else {\r\n                            DayNumber += 45\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 8; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to8.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to8.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to8SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to8SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n\r\n                //creating histogram bins with frequency array\r\n                var bins = [0, 9, 16, 23, 30, 37, 44, 51, 58, 65, 72, 79, 86, 93, 100, 107, 114, 121, 130]\r\n                // var binCount = [];\r\n                for (var i=1; i<bins.length; i++){\r\n                    j=0;\r\n                    var count = 0;\r\n                    while(j < DaysAfterLectMeanSheet1to8.length){\r\n                        if(DaysAfterLectMeanSheet1to8[j] < bins[i] && DaysAfterLectMeanSheet1to8[j] >= bins[i-1]){\r\n                            count ++\r\n                        }\r\n                        j++;\r\n                    }\r\n                    binCount.push(count)\r\n                }\r\n                for (var i =0; i< binCount.length; i++){\r\n                    binCount2.push(binCount[i])\r\n                }\r\n            }\r\n\r\n        //function to work out week of the year\r\n        var weekOfYear = function(date){\r\n           var d = new Date(+date);\r\n           d.setHours(0,0,0);\r\n           d.setDate(d.getDate()+4-(d.getDay()||7));\r\n           return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n        };\r\n\r\n        //function to work out the current day of the year\r\n        Date.prototype.isLeapYear = function() {\r\n            var year = this.getFullYear();\r\n            if((year & 3) != 0) return false;\r\n            return ((year % 100) != 0 || (year % 400) == 0);\r\n        };\r\n\r\n        // Get Day of Year\r\n        Date.prototype.getDOY = function() {\r\n            var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n            var mn = this.getMonth();\r\n            var dn = this.getDate();\r\n            var dayOfYear = dayCount[mn] + dn;\r\n            if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n            return dayOfYear;\r\n        };\r\n\r\n        const dayOfYear = date =>\r\n        Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n        function sortNumber(a,b) {\r\n            return a - b;\r\n        }\r\n\r\n        function quantile(array, percentile) {\r\n            array.sort(sortNumber);\r\n            var index = percentile/100. * (array.length-1);\r\n            if (Math.floor(index) == index) {\r\n                var result = array[index];\r\n            } else {\r\n                var i = Math.floor(index)\r\n                var fraction = index - i;\r\n                var result = array[i] + (array[i+1] - array[i]) * fraction;\r\n            }\r\n            return result;\r\n        }\r\n\r\n            // calculate sum\r\n        function sumArr(arr){\r\n            var a = arr.slice();\r\n            return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n        }\r\n\r\n        //calculate average\r\n        function calcAverage(arr){\r\n            var a = arr.slice();\r\n            if (a.length){\r\n                var sum = sumArr(a);\r\n                var avg = sum / a.length;\r\n                return avg;\r\n            }    \r\n            return false;\r\n        }\r\n\r\n        // Standard deviation\r\n        function getSD(data) {\r\n            let m = calcAverage(data);\r\n            return Math.sqrt(data.reduce(function (sq, n) {\r\n                    return sq + Math.pow(n - m, 2);\r\n                }, 0) / (data.length - 1));\r\n        };\r\n\r\nclass AvgTimeToComplete2020 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {\r\n          labels: [\"[0,9]\", \"[9,16]\", \"[16,23]\", \"[23,30]\", \"[30,37]\", \"[37,44]\", \"[44,51]\", \"[51,58]\", \"[58,65]\", \"[65, 72]\", \"[72,79]\", \"[79,86]\", \"[86,93]\", \"[93,100]\", \"[100,107]\", \"[107,114]\", \"[114,121]\", \"[121,129]\"],\r\n          datasets: [{\r\n            label: 'Average time taken after lecture to complete all tutorial sheets',\r\n            data: binCount2,\r\n            backgroundColor: [\r\n                '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\r\n\r\n            ],\r\n            borderColor: [\r\n                '#0000cc',\r\n            ],\r\n            borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: false,\r\n            scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                maxRotation: 90,\r\n                minRotation: 80\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                beginAtZero: true\r\n                }\r\n            }]\r\n            }\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Average time taken in days after lecture to Complete All Tutorial Sheets',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Average Time Taken to Complete Tutorial Sheets After Lecture'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Frequency'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n        }\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default AvgTimeToComplete2020;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Chart from 'chart.js';\n// import AvgTimeToComplete2020 from '../components/2020Graphs/AvgTimeToCompleteSheet';\nimport MinSheetAccessed from '../components/2020Graphs/MinSheetAccessed';\nimport MinSheetAccessed2k19 from '../components/2019Graphs/MinSheetAccessed';\nimport Bottom from '../components/2020Graphs/BottomHalfPercent';\n// import MeanStart from '../components/2020Graphs/MeanStartVSProgressGrade';\nimport MoreThan from '../components/2020Graphs/MoreThan60';\n// import PercentHis from '../components/2020Graphs/percentileHistogram';\n// import PercenS1to8 from '../components/2020Graphs/PercentS1toS8vsProgress';\n// import ProgressVSStud from '../components/2020Graphs/ProgressVSStudentPercen';\n// import SDHist from '../components/2020Graphs/SDHistogram';\n// import Sheet4 from '../components/2020Graphs/Sheet4Q2';\n// import Sheet5 from '../components/2020Graphs/Sheet5Q1';\n// import Sheet6to8 from '../components/2020Graphs/Sheet6to8Q3';\n// import StartTime from '../components/2020Graphs/StartTimeCorrelation';\n// import Time from '../components/2020Graphs/TimeAnyalsis';\nimport '../App.css';\nimport Top2k19 from '../components/2019Graphs/TopHalfPercent';\nimport Top from '../components/2020Graphs/TopHalfPercent';\nimport SDHist2k19 from '../components/2019Graphs/SDHistogram';\nimport ProgressVSStud2k19 from '../components/2019Graphs/ProgressVSStudentPercen';\nimport PercenS1to82k19 from '../components/2019Graphs/PercentS1toS8vsProgress';\nimport PercentHis2k19 from '../components/2019Graphs/percentileHistogram';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport AvgTimeToComplete2019 from '../components/2019Graphs/AvgTimeToCompleteSheet'\nimport AvgTimeToComplete2020 from '../components/2020Graphs/AvgTimeToCompleteSheet';\nimport MeanStart2k19 from '../components/2019Graphs/MeanStartVSProgressGrade';\nimport MeanStart from '../components/2020Graphs/MeanStartVSProgressGrade';\nimport MoreThan2k19 from '../components/2019Graphs/MoreThan60';\nimport Bottom2k19 from '../components/2019Graphs/BottomHalfPercent';\nimport Sheet6to82k19 from '../components/2019Graphs/Sheet6to8Q3';\nimport Sheet2k19 from '../components/2019Graphs/Sheet2Q1';\nimport Sheet52k19 from '../components/2019Graphs/Sheet5Q2';\n\n\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\n// App\nclass BlogPosts extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n            <div className=\"main chart-wrapper\">\n              <Bottom\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Bottom2k19\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <MoreThan\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <MoreThan2k19\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Top\n              />\n            </div>\n            <div className=\"main chart-wrapper\">\n              <Top2k19\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <AvgTimeToComplete2020\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <AvgTimeToComplete2019\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <MeanStart\n              />\n            </div>\n            <div className=\"sub chart-wrapper\">\n              <MeanStart2k19\n              />\n            </div>\n        </div>\n      \n      </BrowserRouter>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nexport default BlogPosts;\n\n\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport BlogOverview from \"./views/BlogOverview\";\nimport UserProfileLite from \"./views/UserProfileLite\";\nimport AddNewPost from \"./views/AddNewPost\";\nimport Errors from \"./views/Errors\";\nimport ComponentsOverview from \"./views/ComponentsOverview\";\nimport Tables from \"./views/Tables\";\nimport BlogPosts from \"./views/BlogPosts\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/blog-overview\" />\n  },\n  {\n    path: \"/Overview\",\n    layout: DefaultLayout,\n    component: BlogOverview\n  },\n  {\n    path: \"/user-profile-lite\",\n    layout: DefaultLayout,\n    component: UserProfileLite\n  },\n  {\n    path: \"/LecturerPortal\",\n    layout: DefaultLayout,\n    component: AddNewPost\n  },\n  {\n    path: \"/errors\",\n    layout: DefaultLayout,\n    component: Errors\n  },\n  {\n    path: \"/StudentPortal\",\n    layout: DefaultLayout,\n    component: ComponentsOverview\n  },\n  {\n    path: \"/Modules\",\n    layout: DefaultLayout,\n    component: Tables\n  },\n  {\n    path: \"/Tutor\",\n    layout: DefaultLayout,\n    component: BlogPosts\n  }\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\n\nexport const StudentIdContext = React.createContext('StudentId')\n\nexport default () => {\n  return (\n    <StudentIdContext.Provider value=\"59194883\">\n      <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\n        <div>\n          {routes.map((route, index) => {\n            return (\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                component={withTracker(props => {\n                  return (\n                    <route.layout {...props}>\n                      <route.component {...props} />\n                    </route.layout>\n                  );\n                })}\n              />\n            );\n          })}\n        </div>\n      </Router>\n    </StudentIdContext.Provider>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Index.css';\nimport './IndexLecturer.css'\nimport './IndexStudent.css'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}